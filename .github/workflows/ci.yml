name: CI - Test Driven Development

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  unit-tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run type checking
        run: npm run type-check
      
      - name: Run linting
        run: npm run lint
      
      - name: Run unit tests with coverage
        run: npm run test:coverage
        env:
          CI: true
          NEXT_PUBLIC_2GIS_API_KEY: test-api-key
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
      
      - name: Check coverage thresholds
        run: |
          npm run test:coverage -- --coverageThreshold='{
            "global": {
              "branches": 30,
              "functions": 30,
              "lines": 30,
              "statements": 30
            }
          }'

  e2e-tests:
    name: E2E Mobile Tests (disabled)
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        project: [
          'Mobile iPhone SE',
          'Mobile iPhone 12',
          'Mobile Pixel 5',
        ]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Skip - E2E tests are disabled
        run: echo "E2E tests are temporarily disabled. See docs/e2e-testing-strategy.md"

  test-build:
    name: Test Production Build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build for production
        run: npm run build
        env:
          NEXT_PUBLIC_2GIS_API_KEY: test-api-key
      
      - name: Check bundle size
        run: |
          # Add bundle size check script here
          echo "Bundle size check passed"

  mobile-performance:
    name: Mobile Performance Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_2GIS_API_KEY: test-api-key
      
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          lhci autorun --collect.startServerCommand="npm start" \
            --collect.url=http://localhost:3000 \
            --assert.preset=lighthouse:recommended \
            --assert.assertions.categories:performance=90 \
            --assert.assertions.categories:accessibility=90 \
            --assert.assertions.categories:best-practices=90 \
            --assert.assertions.categories:seo=90 || true

  required-checks:
    name: All Required Checks
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests, test-build]
    
    steps:
      - name: All checks passed
        run: echo "All required checks passed!"